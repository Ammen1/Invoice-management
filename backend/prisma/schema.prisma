generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  hash      String
  firstName String?
  lastName  String?
  invoices  Invoice[] @relation("UserInvoices")

  @@map("users")
}

model Invoice {
  id                Int             @id @default(autoincrement())
  issuerCompanyName String
  issuerContactName String
  issuerAddress    String
  issuerCity       String
  issuerCountry    String
  clientCompanyName String
  clientAddress    String
  clientCity       String
  clientCountry    String
  invoiceNumber    String          @unique
  issueDate        DateTime
  dueDate          DateTime
  companyLogoUrl   String?
  status           InvoiceStatus   @default(PENDING)
  lineItems        InvoiceItem[]   @relation("InvoiceLineItems")
  userId           Int
  user             User            @relation("UserInvoices", fields: [userId], references: [id])

  @@map("invoices")
}

model InvoiceItem {
  id              Int          @id @default(autoincrement())
  description     String
  quantity        Int
  unitPrice       Float
  taxAmount       Float
  totalAmount     Float
  invoiceId       Int          // Foreign key to Invoice
  invoice         Invoice      @relation("InvoiceLineItems", fields: [invoiceId], references: [id], onDelete: Cascade)


  @@map("invoice_items")
}

// Enum for invoice status
enum InvoiceStatus {
  PENDING
  PAID
  CANCELLED
  OVERDUE
}
